;; Compile Options : /TML610111 /MS /near /Icommon /Imain /Iirq /Itimer /Iclock /Itbc /Ipwm /Iuart /SL 127 /SD /Oa /Ot /W 3 /Wc /Fa_output\_obj\ 
;; Version Number  : Ver.3.31.4
;; File Name       : main.c

	type (ML610111) 
	model small, near
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$Control_LEDs$main segment code 2h #0h
	$$Initialization$main segment code 2h #0h
	$$NOP1000$main segment code 2h #0h
	$$PinB0_PWM$main segment code 2h #0h
	$$PortA_Digital_Inputs$main segment code 2h #0h
	$$PortA_Low$main segment code 2h #0h
	$$PortB_Low$main segment code 2h #0h
	$$PortC_Low$main segment code 2h #0h
	$$SetOSC$main segment code 2h #0h
	$$TAB_uartSetParam$main segment table 2h #0h
	$$TX_Loop$main segment code 2h #0h
	$$_funcUartFin$main segment code 2h #0h
	$$_intUart$main segment code 2h #0h
	$$analog_comparator$main segment code 2h #0h
	$$main$main segment code 2h #0h
	$$main_clrWDT$main segment code 2h #0h
	$$main_reqNotHalt$main segment code 2h #0h
	STACKSEG 0400h
CVERSION 3.31.4
CGLOBAL 01H 03H 0000H "main_clrWDT" 08H 02H 43H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_funcUartFin" 08H 02H 4EH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main_reqNotHalt" 08H 02H 4FH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "TX_Loop" 08H 02H 53H 00H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "Initialization" 08H 02H 44H 00H 81H 04H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Digital_Inputs" 08H 02H 4BH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main" 08H 02H 54H 00H 80H 00H 00H 00H 01H
CSGLOBAL 03H 0000H "_intUart" 08H 02H 50H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOP1000" 08H 02H 51H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "SetOSC" 08H 02H 45H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortC_Low" 08H 02H 49H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortB_Low" 08H 02H 48H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Low" 08H 02H 47H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "analog_comparator" 08H 02H 46H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PinB0_PWM" 08H 02H 4CH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Control_LEDs" 08H 02H 4DH 00H 80H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0004H 0003H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "state" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 00000001H "state_sub" 02H 00H 00H
CSTRUCTMEM 52H 00000005H 00000003H "reserve" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "br" 02H 00H 02H
CSTRUCTMEM 42H 00000001H 00000004H "lg" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "pt" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "stp" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "neg" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "dir" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0002H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0001H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CENUMTAG 0000H 0000H 0005H 0003H "Status"
CENUMMEM 00000000H "CONTINUE"
CENUMMEM 00000001H "WON"
CENUMMEM 00000002H "LOST"
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "tUartSetParam" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "cbfUart" 0AH 03H 00H 02H 2EH 00H 00H 00H 00H 00H 07H
CTYPEDEF 0000H 0000H 43H "STRUCT_STATE" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 01H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 00H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 03H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 02H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CGLOBAL 00H 42H 0015H "RecWorld" 05H 01H 15H 00H 00H 00H
CGLOBAL 00H 42H 0001H "_flgUartFin" 02H 00H 00H
CGLOBAL 00H 42H 0002H "UART_VAR" 02H 00H 01H
CGLOBAL 01H 42H 0008H "PING" 05H 01H 08H 00H 00H 00H
CGLOBAL 01H 42H 0016H "AckMCUConn" 05H 01H 16H 00H 00H 00H
CGLOBAL 01H 42H 000EH "InputRec" 05H 01H 0EH 00H 00H 00H
CGLOBAL 00H 43H 0004H "long_a" 02H 00H 02H
CGLOBAL 00H 43H 0008H "double_a" 02H 00H 04H
CGLOBAL 00H 43H 0002H "inta" 02H 00H 01H
CSGLOBAL 01H 000AH "_uartSetParam" 04H 00H 05H 03H 00H
CGLOBAL 01H 42H 0017H "OutputRec" 05H 01H 17H 00H 00H 00H
CGLOBAL 00H 43H 00C8H "table" 05H 01H 64H 00H 00H 01H
CGLOBAL 00H 43H 0001H "char_a" 02H 00H 00H
CGLOBAL 01H 42H 000EH "HelloWorld" 05H 01H 0EH 00H 00H 00H
CGLOBAL 00H 43H 0004H "delay" 02H 00H 02H
CGLOBAL 00H 42H 0002H "uint" 02H 00H 01H
CGLOBAL 00H 42H 0001H "_reqNotHalt" 02H 00H 00H
CGLOBAL 00H 42H 0001H "uchar" 02H 00H 00H
CGLOBAL 01H 42H 0017H "InputStatus" 05H 01H 17H 00H 00H 00H
CGLOBAL 00H 42H 0016H "Q111ToQ112" 05H 01H 16H 00H 00H 00H
CGLOBAL 00H 43H 0004H "float_a" 02H 00H 03H
CFILE 0001H 000007EEH "main\\ML610111.H"
CFILE 0002H 000000D8H "main\\stdlib.h"
CFILE 0003H 0000007AH "main\\yvals.h"
CFILE 0004H 0000006BH "uart\\uart.h"
CFILE 0005H 00000027H "common\\common.h"
CFILE 0006H 00000057H "irq\\irq.h"
CFILE 0007H 00000023H "main\\mcu.h"
CFILE 0000H 00000405H "main\\main.c"

	rseg $$main$main
CFUNCTION 84

_main	:
CBLOCK 84 1 237

;;{
CLINEA 0000H 0001H 00EDH 0001H 0001H
CBLOCK 84 2 237
CLOCAL 46H 0001H 0019H 0002H "encoder_position" 02H 00H 00H
CLOCAL 46H 0001H 0016H 0002H "previous_encoder_position" 02H 00H 00H
CLOCAL 46H 0001H 0018H 0002H "button_flag" 02H 00H 00H
CLOCAL 4BH 0002H 0000H 0002H "j" 02H 00H 01H

;;	Initialization(); //Ports, UART, Timers, Oscillator, Comparators, etc.
CLINEA 0000H 0001H 00F4H 0002H 0047H
	bl	_Initialization

;;MyLoop:
CLINEA 0000H 0001H 00F6H 0001H 0007H
CLABEL 0008H "MyLoop"
_$L8 :

;;	if (PWCD > 4150) 
CLINEA 0000H 0001H 00FBH 0002H 0012H
	l	er0,	0f912h
	cmp	r0,	#036h
	cmpc	r1,	#010h
	ble	_$L9
CBLOCK 84 3 252

;;		PWCD = 1;	
CLINEA 0000H 0001H 00FDH 0003H 000CH
	mov	er0,	#1 
	st	er0,	0f912h
CBLOCKEND 84 3 254

;;	}
CLINEA 0000H 0000H 00FEH 0002H 0002H
_$L9 :

;;	previous_encoder_position = encoder_position;
CLINEA 0000H 0001H 0108H 0002H 002EH
	mov	r2,	r5

;;	if (Encoder_BUTTON == 0) 			//Encoder Button Pressed...			
CLINEA 0000H 0001H 010EH 0002H 003BH
	tb	0f250h.2
	bne	_$L11
CBLOCK 84 4 271

;;		encoder_position = 5;
CLINEA 0000H 0001H 0110H 0003H 0017H
	mov	r5,	#05h

;;		button_flag = button_flag + 1; 	//Toggle Flag...
CLINEA 0000H 0001H 0111H 0003H 0032H
	add	r4,	#01h

;;		if(button_flag > 1)
CLINEA 0000H 0001H 0113H 0003H 0015H
	cmp	r4,	#01h
	ble	_$L13
CBLOCK 84 5 276

;;			button_flag = 0;
CLINEA 0000H 0001H 0115H 0004H 0013H
	mov	r4,	#00h
CBLOCKEND 84 5 278

;;		}
CLINEA 0000H 0000H 0116H 0003H 0003H
_$L13 :
CBLOCK 84 6 283

;;			PCRUN = 0;  	      //Switch state of output to OFF...
CLINEA 0000H 0001H 011CH 0004H 0038H
	rb	0f917h.0
CBLOCKEND 84 6 289

;;		}while (Encoder_BUTTON == 0);
CLINEA 0000H 0000H 0121H 0003H 001FH
	tb	0f250h.2
	beq	_$L13

;;			PCRUN = 1;  	   	 // Switch state of output back to ON...
CLINEA 0000H 0001H 0122H 0004H 003CH
	sb	0f917h.0

;;		goto Action;		       // Jump directly to control...
CLINEA 0000H 0001H 0125H 0003H 0035H
	bal	_$L34

;;	}
CLINEA 0000H 0000H 0126H 0002H 0002H
_$L11 :

;;	if (Encoder_Input_CH_A = 0) 			//Encoder Input "CH-A" on A0; "CH-B" on A1			
CLINEA 0000H 0001H 012BH 0002H 004DH
	rb	0f250h.0
	tb	0f250h.0
	beq	_$L26
CBLOCK 84 7 300

;;		if (Encoder_Input_CH_B = 0)		// STEP #1 => If Ch.A=0 & Ch.B=0...
CLINEA 0000H 0001H 012DH 0003H 0042H
	rb	0f250h.1
	tb	0f250h.1
	beq	_$L28
CBLOCK 84 8 302

;;			encoder_position = 1;
CLINEA 0000H 0001H 012FH 0004H 0018H
	mov	r0,	#01h
CBLOCKEND 84 8 304

;;		else						// STEP #2 => If Ch.A=0 & Ch.B=1...
CLINEA 0000H 0001H 0131H 0003H 002FH
	bal	_$L30
_$L28 :
CBLOCK 84 9 306

;;			encoder_position = 2;
CLINEA 0000H 0001H 0133H 0004H 0018H
	mov	r0,	#02h
CBLOCKEND 84 9 308

;;		}	
CLINEA 0000H 0000H 0134H 0003H 0004H
_$L30 :
	mov	r5,	r0

;;	else					
CLINEA 0000H 0001H 0137H 0002H 000AH
	bal	_$L34
_$L26 :
CBLOCK 84 10 312

;;		if (Encoder_Input_CH_B = 1)		// STEP #4 => Ch.A=1 & Ch.B=0...
CLINEA 0000H 0001H 0139H 0003H 003FH
	sb	0f250h.1
	tb	0f250h.1
	beq	_$L32
CBLOCK 84 11 314

;;			encoder_position = 4;
CLINEA 0000H 0001H 013BH 0004H 0018H
	mov	r5,	#04h
CBLOCKEND 84 11 316

;;		else						// STEP #3 => Ch.A=1 & Ch.B=1...
CLINEA 0000H 0001H 013DH 0003H 002CH
	bal	_$L34
_$L32 :
CBLOCK 84 12 318

;;			encoder_position = 3;
CLINEA 0000H 0001H 013FH 0004H 0018H
	mov	r5,	#03h
CBLOCKEND 84 12 320

;;		}	
CLINEA 0000H 0000H 0140H 0003H 0004H
_$L34 :
CBLOCKEND 84 10 322
CBLOCKEND 84 7 408

;;	if (button_flag == 1)
CLINEA 0000H 0001H 014EH 0002H 0016H
	cmp	r4,	#01h
	bne	_$L35
CBLOCKEND 84 4 408
CBLOCK 84 13 335

;;		encoder_position = 5;	//Reset to five...
CLINEA 0000H 0001H 0151H 0003H 002AH
	mov	r5,	#05h
CBLOCKEND 84 13 338

;;	}
CLINEA 0000H 0000H 0152H 0002H 0002H
_$L35 :

;;	switch(encoder_position) 
CLINEA 0000H 0001H 0157H 0002H 001AH
CBLOCK 84 14 344
	cmp	r5,	#01h
	beq	_$L42

;;	switch(encoder_position) 
CLINEA 0000H 0000H 0157H 0002H 001AH
	cmp	r5,	#02h
	beq	_$L47

;;	switch(encoder_position) 
CLINEA 0000H 0000H 0157H 0002H 001AH
	cmp	r5,	#03h
	beq	_$L52

;;	switch(encoder_position) 
CLINEA 0000H 0000H 0157H 0002H 001AH
	cmp	r5,	#04h
	beq	_$L57

;;	switch(encoder_position) 
CLINEA 0000H 0000H 0157H 0002H 001AH
	cmp	r5,	#05h
	bne	_$M1
	b	_$L62
_$M1 :

;;		PCRUN = 0;			
CLINEA 0000H 0001H 0188H 0003H 000FH
	rb	0f917h.0
CBLOCKEND 84 14 394

;;	}
CLINEA 0000H 0000H 018AH 0002H 0002H
_$L40 :

;;	Control_LEDs();	// Toggle LED's...
CLINEA 0000H 0001H 0192H 0002H 0023H
	bl	_Control_LEDs

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0193H 0002H 001DH
	bl	_main_clrWDT

;;goto MyLoop;		// Loop back to beginning of this function...
CLINEA 0000H 0001H 0196H 0001H 003BH
	bal	_$L8
CBLOCKEND 84 2 408

;;	case 1:
CLINEA 0000H 0001H 0159H 0002H 0008H
_$L42 :

;;		if (previous_encoder_position == 4)	// CW = Increment Duty Cycle...
CLINEA 0000H 0001H 015AH 0003H 0045H
	cmp	r2,	#04h
	bne	_$L43

;;			PWCD = PWCD + 1;
CLINEA 0000H 0001H 015BH 0004H 0013H
	l	er0,	0f912h
	add	er0,	#1 
	st	er0,	0f912h
_$L43 :

;;		if (previous_encoder_position == 2)	// CCW = Decrement Duty Cycle...
CLINEA 0000H 0001H 015CH 0003H 0046H
	cmp	r2,	#02h
	bne	_$L45

;;			PWCD = PWCD - 1;
CLINEA 0000H 0001H 015DH 0004H 0013H
	l	er0,	0f912h
	add	er0,	#-1
	st	er0,	0f912h
_$L45 :

;;		PCRUN = 1;
CLINEA 0000H 0001H 015FH 0003H 000CH
	sb	0f917h.0

;;		break;	//Then quit the switch
CLINEA 0000H 0001H 0160H 0003H 001FH
	bal	_$L40

;;	case 2:
CLINEA 0000H 0001H 0162H 0002H 0008H
_$L47 :

;;		if (previous_encoder_position == 1)	// CW = Increment Duty Cycle...
CLINEA 0000H 0001H 0163H 0003H 0045H
	cmp	r2,	#01h
	bne	_$L48

;;			PWCD= PWCD+ 1;
CLINEA 0000H 0001H 0164H 0004H 0011H
	l	er0,	0f912h
	add	er0,	#1 
	st	er0,	0f912h
_$L48 :

;;		if (previous_encoder_position == 3)	// CCW = Decrement Duty Cycle...
CLINEA 0000H 0001H 0165H 0003H 0046H
	cmp	r2,	#03h
	bne	_$L50

;;			PWCD= PWCD- 1;
CLINEA 0000H 0001H 0166H 0004H 0011H
	l	er0,	0f912h
	add	er0,	#-1
	st	er0,	0f912h
_$L50 :

;;		PCRUN = 1;
CLINEA 0000H 0001H 0168H 0003H 000CH
	sb	0f917h.0

;;		break;	//Then quit the switch
CLINEA 0000H 0001H 0169H 0003H 001FH
	bal	_$L40

;;	case 3:
CLINEA 0000H 0001H 016BH 0002H 0008H
_$L52 :

;;		if (previous_encoder_position == 2)	// CW = Increment Duty Cycle...
CLINEA 0000H 0001H 016CH 0003H 0045H
	cmp	r2,	#02h
	bne	_$L53

;;			PWCD= PWCD+ 1; 
CLINEA 0000H 0001H 016DH 0004H 0012H
	l	er0,	0f912h
	add	er0,	#1 
	st	er0,	0f912h
_$L53 :

;;		if (previous_encoder_position == 4)	// CCW = Decrement Duty Cycle...
CLINEA 0000H 0001H 016EH 0003H 0046H
	cmp	r2,	#04h
	bne	_$L55

;;			PWCD= PWCD- 1;
CLINEA 0000H 0001H 016FH 0004H 0011H
	l	er0,	0f912h
	add	er0,	#-1
	st	er0,	0f912h
_$L55 :

;;		PCRUN = 1;
CLINEA 0000H 0001H 0171H 0003H 000CH
	sb	0f917h.0

;;		break;	//Then quit the switch
CLINEA 0000H 0001H 0172H 0003H 001FH
	bal	_$L40

;;	case 4:
CLINEA 0000H 0001H 0174H 0002H 0008H
_$L57 :

;;		if (previous_encoder_position == 3)	// CW = Increment Duty Cycle...
CLINEA 0000H 0001H 0175H 0003H 0045H
	cmp	r2,	#03h
	bne	_$L58

;;			PWCD= PWCD+ 1;
CLINEA 0000H 0001H 0176H 0004H 0011H
	l	er0,	0f912h
	add	er0,	#1 
	st	er0,	0f912h
_$L58 :

;;		if (previous_encoder_position == 1)	// CCW = Decrement Duty Cycle...
CLINEA 0000H 0001H 0177H 0003H 0046H
	cmp	r2,	#01h
	bne	_$L60

;;			PWCD= PWCD- 1;
CLINEA 0000H 0001H 0178H 0004H 0011H
	l	er0,	0f912h
	add	er0,	#-1
	st	er0,	0f912h
_$L60 :

;;		PCRUN = 1;
CLINEA 0000H 0001H 017AH 0003H 000CH
	sb	0f917h.0

;;		break;	// Then quit the switch
CLINEA 0000H 0001H 017BH 0003H 0020H
	b	_$L40

;;	case 5:
CLINEA 0000H 0001H 017DH 0002H 0008H
_$L62 :

;;		PWCP = 0;			// Init Period to 0 (0kHz)
CLINEA 0000H 0001H 0182H 0003H 0028H
	mov	er0,	#0 
	st	er0,	0f910h

;;		PCRUN = 0;  		//Switch state of output to OFF...
CLINEA 0000H 0001H 0184H 0003H 0032H
	rb	0f917h.0

;;		break;			// Then quit the switch
CLINEA 0000H 0001H 0185H 0003H 0022H
	b	_$L40
CBLOCKEND 84 1 408
CFUNCTIONEND 84


	rseg $$main_clrWDT$main
CFUNCTION 67

_main_clrWDT	:
CBLOCK 67 1 434

;;{
CLINEA 0000H 0001H 01B2H 0001H 0001H
CBLOCK 67 2 434

;;	do {
CLINEA 0000H 0001H 01B5H 0002H 0005H
_$L67 :
CBLOCK 67 3 437

;;		WDTCON = 0x5Au;
CLINEA 0000H 0001H 01B6H 0003H 0011H
	mov	r0,	#05ah
	st	r0,	0f00eh
CBLOCKEND 67 3 439

;;	} while (WDP != 1);
CLINEA 0000H 0000H 01B7H 0002H 0014H
	tb	0f00eh.0
	beq	_$L67

;;	WDTCON = 0xA5u;
CLINEA 0000H 0001H 01B8H 0002H 0010H
	mov	r0,	#0a5h
	st	r0,	0f00eh
CBLOCKEND 67 2 441

;;}
CLINEA 0000H 0001H 01B9H 0001H 0001H
	rt
CBLOCKEND 67 1 441
CFUNCTIONEND 67


	rseg $$NOP1000$main
CFUNCTION 81

_NOP1000	:
CBLOCK 81 1 451

;;{
CLINEA 0000H 0001H 01C3H 0001H 0001H
CBLOCK 81 2 451
CLOCAL 4AH 0002H 0000H 0002H "ONCNT" 02H 00H 01H
CBLOCKEND 81 2 458

;;}
CLINEA 0000H 0001H 01CAH 0001H 0001H
	rt
CBLOCKEND 81 1 458
CFUNCTIONEND 81


	rseg $$Initialization$main
CFUNCTION 68

_Initialization	:
CBLOCK 68 1 465

;;static void Initialization(void){
CLINEA 0000H 0001H 01D1H 0001H 0021H
	push	lr
CBLOCK 68 2 465
CRET 0000H

;;			DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 (initial value).
CLINEA 0000H 0001H 01D5H 0004H 0047H
	sb	0f02ah.0

;;			DUA0  = 0; // 0=> Enables the operation of UART0 (initial value).
CLINEA 0000H 0001H 01D6H 0004H 0044H
	rb	0f02ah.2

;;			DUA1  = 1; // 0=> Enables Uart1 (initial value). 
CLINEA 0000H 0001H 01D7H 0004H 0034H
	sb	0f02ah.3

;;			DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) (initial value).
CLINEA 0000H 0001H 01D8H 0004H 0047H
	sb	0f02ah.6

;;			DI2C0 = 1; // 0=> Enables I2C bus Interface (Master) (initial value).	
CLINEA 0000H 0001H 01D9H 0004H 0049H
	sb	0f02ah.7

;;		BLKCON4 = 0x00; // 0=> Enables SA-ADC
CLINEA 0000H 0001H 01DBH 0003H 0027H
	mov	r0,	#00h
	st	r0,	0f02ch

;;		BLKCON6 = 0x00; // (1=disables; 0=enables) the operation of Timers 8, 9, A, E, F.
CLINEA 0000H 0001H 01DCH 0003H 0053H
	st	r0,	0f02eh

;;		BLKCON7 = 0x00; // (1=disables; 0=enables) the operation of PWM (PWMC, PWMD, PWME, PWMF
CLINEA 0000H 0001H 01DDH 0003H 0059H
	st	r0,	0f02fh

;;		PortA_Low();	//Initialize all 3 Ports of Port A to GPIO-Low
CLINEA 0000H 0001H 01E0H 0003H 003DH
	bl	_PortA_Low

;;		PortB_Low();	//Initialize all 8 Ports of Port B to GPIO-Low
CLINEA 0000H 0001H 01E1H 0003H 003DH
	bl	_PortB_Low

;;		PortC_Low();	//Initialize all 4 Ports of Port C to GPIO-Low
CLINEA 0000H 0001H 01E2H 0003H 003DH
	bl	_PortC_Low

;;		PinB0_PWM();	// Set up PWM Pin on B.0...(PWMC)
CLINEA 0000H 0001H 01EFH 0003H 0030H
	bl	_PinB0_PWM

;;     		SetOSC();
CLINEA 0000H 0001H 01F6H 0008H 0010H
	bl	_SetOSC

;;		TM8D    = 0;	//Timer 8 DATA Register
CLINEA 0000H 0001H 01FEH 0003H 0026H
	mov	r0,	#00h
	st	r0,	0f8e0h

;;		TM8C    = 0;	//Timer 8 CLOCK Register
CLINEA 0000H 0001H 0201H 0003H 0027H
	st	r0,	0f8e1h

;;		T8C1 = 0;	// 01 = HTBCLK  
CLINEA 0000H 0001H 0206H 0003H 001CH
	rb	0f8e1h.1

;;		T8C0 = 1;
CLINEA 0000H 0001H 0207H 0003H 000BH
	sb	0f8e1h.0

;;		T89M16 = 0;	// 0=8-Bit Mode; 1=16bit Mode...
CLINEA 0000H 0001H 0209H 0003H 002EH
	rb	0f8e2h.5

;;		T8OST = 0;	// 0=Normal; 1=One-Shot...
CLINEA 0000H 0001H 020BH 0003H 0027H
	rb	0f8e2h.7

;;		T8RUN = 0;	//0=STOP; 1=START...
CLINEA 0000H 0001H 020EH 0003H 0021H
	rb	0f8e3h.0

;;		irq_di();	// Disable Interrupts
CLINEA 0000H 0001H 0216H 0003H 0021H
	bl	_irq_di

;;		irq_init();	// Initialize Interrupts (All Off and NO Requests)
CLINEA 0000H 0001H 0217H 0003H 0040H
	bl	_irq_init

;;		IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
CLINEA 0000H 0001H 0222H 0003H 0034H
	mov	r0,	#00h
	st	r0,	0f017h
	st	r0,	0f016h
	st	r0,	0f015h
	st	r0,	0f014h
	st	r0,	0f013h
	st	r0,	0f012h
	st	r0,	0f011h
	st	r0,	0f010h

;;		IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
CLINEA 0000H 0001H 022DH 0003H 003CH
	st	r0,	0f01fh
	st	r0,	0f01eh
	st	r0,	0f01dh
	st	r0,	0f01ch
	st	r0,	0f01bh
	st	r0,	0f01ah
	st	r0,	0f019h
	st	r0,	0f018h

;;		E2H = 0; 	// E2H is the Enable flag for 2Hz TBC Interrupt (1=ENABLED)
CLINEA 0000H 0001H 0230H 0003H 0047H
	rb	0f017h.3

;;		(void)irq_setHdr( (unsigned char)IRQ_NO_UA0INT, _intUart );
CLINEA 0000H 0001H 0235H 0003H 003DH
	mov	r2,	#BYTE1 OFFSET __intUart
	mov	r3,	#BYTE2 OFFSET __intUart
	mov	r0,	#0fh
	bl	_irq_setHdr

;;		EUA0 = 1; // EUA0 is the enable flag for the UART0 interrupt (1=ENABLED)
CLINEA 0000H 0001H 0237H 0003H 004AH
	sb	0f014h.0

;;		irq_ei(); // Enable Interrupts
CLINEA 0000H 0001H 0238H 0003H 0020H
	bl	_irq_ei

;;	WDTMOD = 0x03; 	// 0x03=overflow 8sec...
CLINEA 0000H 0001H 023DH 0002H 0029H
	mov	r0,	#03h
	st	r0,	0f00fh

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 023EH 0002H 001DH
	bl	_main_clrWDT

;;		HelloWorld[12] 	= 0x0D;
CLINEA 0000H 0001H 0241H 0003H 0019H
	mov	r0,	#0dh
	st	r0,	NEAR _HelloWorld+0ch

;;		HelloWorld[13] 	= 0x0A;
CLINEA 0000H 0001H 0242H 0003H 0019H
	mov	r0,	#0ah
	st	r0,	NEAR _HelloWorld+0dh

;;		InputStatus[21] 	= 0x0D;
CLINEA 0000H 0001H 0243H 0003H 001AH
	mov	r0,	#0dh
	st	r0,	NEAR _InputStatus+015h

;;		InputStatus[22] 	= 0x0A;
CLINEA 0000H 0001H 0244H 0003H 001AH
	mov	r0,	#0ah
	st	r0,	NEAR _InputStatus+016h

;;		InputRec[12] 	= 0x0D;
CLINEA 0000H 0001H 0245H 0003H 0017H
	mov	r0,	#0dh
	st	r0,	NEAR _InputRec+0ch

;;		InputRec[13] 	= 0x0A;
CLINEA 0000H 0001H 0246H 0003H 0017H
	mov	r0,	#0ah
	st	r0,	NEAR _InputRec+0dh

;;		OutputRec[21] 	= 0x0D;
CLINEA 0000H 0001H 0247H 0003H 0018H
	mov	r0,	#0dh
	st	r0,	NEAR _OutputRec+015h

;;		OutputRec[22] 	= 0x0A;
CLINEA 0000H 0001H 0248H 0003H 0018H
	mov	r0,	#0ah
	st	r0,	NEAR _OutputRec+016h

;;		AckMCUConn[20] 	= 0x0D;
CLINEA 0000H 0001H 0249H 0003H 0019H
	mov	r0,	#0dh
	st	r0,	NEAR _AckMCUConn+014h

;;		AckMCUConn[21] 	= 0x0A;
CLINEA 0000H 0001H 024AH 0003H 0019H
	mov	r0,	#0ah
	st	r0,	NEAR _AckMCUConn+015h

;;				     &_uartSetParam );				/* Param... 	 */
CLINEA 0000H 0001H 024FH 000AH 002EH
	mov	r0,	#BYTE1 OFFSET __uartSetParam
	mov	r1,	#BYTE2 OFFSET __uartSetParam
	push	er0
	mov	r2,	#040h
	mov	r3,	#01fh
	mov	r0,	#02h
	bl	_uart_init
	add	sp,	#2 

;;		uart_PortSet();
CLINEA 0000H 0001H 0250H 0003H 0011H
	bl	_uart_PortSet

;;		_flgUartFin = 0;
CLINEA 0000H 0001H 0251H 0003H 0012H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;		uart_stop();
CLINEA 0000H 0001H 0252H 0003H 000EH
	bl	_uart_stop

;;		uart_startSend(HelloWorld, 14, _funcUartFin); // Send, "Hello World!"
CLINEA 0000H 0001H 0254H 0003H 0047H
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#14
	mov	r0,	#BYTE1 OFFSET _HelloWorld
	mov	r1,	#BYTE2 OFFSET _HelloWorld
	bl	_uart_startSend
	add	sp,	#2 

;;		while(_flgUartFin != 1){
CLINEA 0000H 0000H 0255H 0001H 0001H
	bal	_$L80

;;		while(_flgUartFin != 1){
CLINEA 0000H 0000H 0255H 0003H 001AH
_$L78 :
CBLOCK 68 3 597

;;			NOP1000();
CLINEA 0000H 0001H 0256H 0004H 000DH
	bl	_NOP1000

;;			main_clrWDT();
CLINEA 0000H 0001H 0257H 0004H 0011H
	bl	_main_clrWDT
CBLOCKEND 68 3 600

;;		while(_flgUartFin != 1){
CLINEA 0000H 0000H 0255H 0001H 0001H
_$L80 :
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L78
CBLOCKEND 68 2 601

;;}
CLINEA 0000H 0001H 0259H 0001H 0001H
	pop	pc
CBLOCKEND 68 1 601
CFUNCTIONEND 68


	rseg $$_funcUartFin$main
CFUNCTION 78

__funcUartFin	:
CBLOCK 78 1 613

;;{
CLINEA 0000H 0001H 0265H 0001H 0001H
	push	lr
CBLOCK 78 2 613
CRET 0000H
CARGUMENT 46H 0002H 0000H "size" 02H 00H 01H
CARGUMENT 46H 0001H 0000H "errStat" 02H 00H 00H

;;	uart_continue();					// Function in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 0266H 0002H 0054H
	bl	_uart_continue

;;	_flgUartFin = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 0267H 0002H 0026H
	mov	r0,	#01h
	st	r0,	NEAR __flgUartFin

;;	main_reqNotHalt();				// uncommented 5/2/2013
CLINEA 0000H 0001H 0268H 0002H 002EH
	bl	_main_reqNotHalt
CBLOCKEND 78 2 617

;;}
CLINEA 0000H 0001H 0269H 0001H 0001H
	pop	pc
CBLOCKEND 78 1 617
CFUNCTIONEND 78


	rseg $$main_reqNotHalt$main
CFUNCTION 79

_main_reqNotHalt	:
CBLOCK 79 1 627

;;{
CLINEA 0000H 0001H 0273H 0001H 0001H
CBLOCK 79 2 627

;;	_reqNotHalt = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 0274H 0002H 0026H
	mov	r0,	#01h
	st	r0,	NEAR __reqNotHalt
CBLOCKEND 79 2 629

;;}
CLINEA 0000H 0001H 0275H 0001H 0001H
	rt
CBLOCKEND 79 1 629
CFUNCTIONEND 79


	rseg $$_intUart$main
CFUNCTION 80

__intUart	:
CBLOCK 80 1 639

;;{
CLINEA 0000H 0001H 027FH 0001H 0001H
CBLOCK 80 2 639

;;		uart_continue(); //in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 0280H 0003H 0047H
	b	_uart_continue
CBLOCKEND 80 2 641
CLINEA 0000H 0001H 0281H 0001H 0001H
CBLOCKEND 80 1 641
CFUNCTIONEND 80


	rseg $$SetOSC$main
CFUNCTION 69

_SetOSC	:
CBLOCK 69 1 646

;;static void SetOSC(void){
CLINEA 0000H 0001H 0286H 0001H 0019H
CBLOCK 69 2 646

;;	SYSC0 = 0;			// Used to select the frequency of the HSCLK => 00=8.192MHz.
CLINEA 0000H 0001H 0289H 0002H 004AH
	rb	0f002h.0

;;	SYSC1 = 0;
CLINEA 0000H 0001H 028AH 0002H 000BH
	rb	0f002h.1

;;	OSCM1 = 1;			// 10 => Built-in PLL oscillation mode
CLINEA 0000H 0001H 028CH 0002H 0034H
	sb	0f002h.3

;;	OSCM0 = 0;
CLINEA 0000H 0001H 028DH 0002H 000BH
	rb	0f002h.2

;;	ENOSC = 1;			//1=Enable High Speed Oscillator...MUST ENABLE before setting SYSTEM CLOCK!
CLINEA 0000H 0001H 028FH 0002H 0059H
	sb	0f003h.1

;;	SYSCLK = 1;			//1=HSCLK; 0=LSCLK (MUST set ENOSC = 1 first) 
CLINEA 0000H 0001H 0290H 0002H 003DH
	sb	0f003h.0

;;	LPLL = 1;			//1=Enables the use of PLL oscillation - ADDED 4/30/2013
CLINEA 0000H 0001H 0292H 0002H 0045H
	sb	0f003h.7

;;	__EI();			//INT enable
CLINEA 0000H 0001H 0294H 0002H 0017H
	ei
CBLOCKEND 69 2 661

;;}
CLINEA 0000H 0001H 0295H 0001H 0001H
	rt
CBLOCKEND 69 1 661
CFUNCTIONEND 69


	rseg $$analog_comparator$main
CFUNCTION 70

_analog_comparator	:
CBLOCK 70 1 668

;;void analog_comparator(void){
CLINEA 0000H 0001H 029CH 0001H 001DH
CBLOCK 70 2 668

;;	CMP0EN  = 0x01; 	// Comparator ON...
CLINEA 0000H 0001H 02B2H 0002H 0025H
	sb	0f950h.0

;;	CMP0E1  = 0x00; 	// No Interupt...
CLINEA 0000H 0001H 02B3H 0002H 0023H
	rb	0f951h.1

;;	CMP0E0  = 0x00;
CLINEA 0000H 0001H 02B4H 0002H 0010H
	rb	0f951h.0

;;	CMP0SM1 = 0x00; 	// Detect without Sampling... 
CLINEA 0000H 0001H 02B5H 0002H 0030H
	rb	0f951h.3

;;	CMP0RFS = 0x01; 	// Differential Input on B5
CLINEA 0000H 0001H 02B6H 0002H 002DH
	sb	0f951h.4

;;	CMP0EN  = 0x00;
CLINEA 0000H 0001H 02B9H 0002H 0010H
	rb	0f950h.0
CBLOCKEND 70 2 700

;;}
CLINEA 0000H 0001H 02BCH 0001H 0001H
	rt
CBLOCKEND 70 1 700
CFUNCTIONEND 70


	rseg $$PortA_Low$main
CFUNCTION 71

_PortA_Low	:
CBLOCK 71 1 708

;;void PortA_Low(void){
CLINEA 0000H 0001H 02C4H 0001H 0015H
CBLOCK 71 2 708

;;	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
CLINEA 0000H 0001H 02CEH 0002H 0031H
	rb	0f251h.0

;;	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
CLINEA 0000H 0001H 02CFH 0002H 0031H
	rb	0f251h.1

;;	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
CLINEA 0000H 0001H 02D0H 0002H 0031H
	rb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
CLINEA 0000H 0001H 02D3H 0002H 0031H
	sb	0f253h.0

;;	PA0C0  = 1;		
CLINEA 0000H 0001H 02D4H 0002H 000EH
	sb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
CLINEA 0000H 0001H 02D5H 0002H 0031H
	sb	0f253h.1

;;	PA1C0  = 1;	
CLINEA 0000H 0001H 02D6H 0002H 000DH
	sb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
CLINEA 0000H 0001H 02D7H 0002H 0031H
	sb	0f253h.2

;;	PA2C0  = 1;	
CLINEA 0000H 0001H 02D8H 0002H 000DH
	sb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 02DBH 0002H 003CH
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 02DCH 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 02DDH 0002H 003CH
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 02DEH 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 02DFH 0002H 003CH
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 02E0H 0002H 000EH
	rb	0f254h.2

;;	PA0D = 0;		// A.0 Output OFF....
CLINEA 0000H 0001H 02E3H 0002H 0021H
	rb	0f250h.0

;;	PA1D = 0;		// A.1 Output OFF....
CLINEA 0000H 0001H 02E4H 0002H 0021H
	rb	0f250h.1

;;	PA2D = 0;		// A.2 Output OFF....
CLINEA 0000H 0001H 02E5H 0002H 0021H
	rb	0f250h.2

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 02E7H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 71 2 745
CLINEA 0000H 0001H 02E9H 0001H 0001H
CBLOCKEND 71 1 745
CFUNCTIONEND 71


	rseg $$PortB_Low$main
CFUNCTION 72

_PortB_Low	:
CBLOCK 72 1 751

;;void PortB_Low(void){
CLINEA 0000H 0001H 02EFH 0001H 0015H
CBLOCK 72 2 751

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 02F9H 0002H 0031H
	rb	0f259h.0

;;	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
CLINEA 0000H 0001H 02FAH 0002H 0031H
	rb	0f259h.1

;;	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
CLINEA 0000H 0001H 02FBH 0002H 0031H
	rb	0f259h.2

;;	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
CLINEA 0000H 0001H 02FCH 0002H 0031H
	rb	0f259h.3

;;	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
CLINEA 0000H 0001H 02FDH 0002H 0031H
	rb	0f259h.4

;;	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
CLINEA 0000H 0001H 02FEH 0002H 0031H
	rb	0f259h.5

;;	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
CLINEA 0000H 0001H 02FFH 0002H 0031H
	rb	0f259h.6

;;	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
CLINEA 0000H 0001H 0300H 0002H 0031H
	rb	0f259h.7

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0303H 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 0304H 0002H 000EH
	sb	0f25ah.0

;;	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
CLINEA 0000H 0001H 0305H 0002H 0031H
	sb	0f25bh.1

;;	PB1C0  = 1;	
CLINEA 0000H 0001H 0306H 0002H 000DH
	sb	0f25ah.1

;;	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
CLINEA 0000H 0001H 0307H 0002H 0031H
	sb	0f25bh.2

;;	PB2C0  = 1;	
CLINEA 0000H 0001H 0308H 0002H 000DH
	sb	0f25ah.2

;;	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
CLINEA 0000H 0001H 0309H 0002H 0031H
	sb	0f25bh.3

;;	PB3C0  = 1;		
CLINEA 0000H 0001H 030AH 0002H 000EH
	sb	0f25ah.3

;;	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
CLINEA 0000H 0001H 030BH 0002H 0031H
	sb	0f25bh.4

;;	PB4C0  = 1;	
CLINEA 0000H 0001H 030CH 0002H 000DH
	sb	0f25ah.4

;;	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
CLINEA 0000H 0001H 030DH 0002H 0031H
	sb	0f25bh.5

;;	PB5C0  = 1;	
CLINEA 0000H 0001H 030EH 0002H 000DH
	sb	0f25ah.5

;;	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
CLINEA 0000H 0001H 030FH 0002H 0031H
	sb	0f25bh.6

;;	PB6C0  = 1;	
CLINEA 0000H 0001H 0310H 0002H 000DH
	sb	0f25ah.6

;;	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
CLINEA 0000H 0001H 0311H 0002H 0031H
	sb	0f25bh.7

;;	PB7C0  = 1;	
CLINEA 0000H 0001H 0312H 0002H 000DH
	sb	0f25ah.7

;;	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 0315H 0002H 003CH
	rb	0f25dh.0

;;	PB0MD0  = 0;	
CLINEA 0000H 0001H 0316H 0002H 000EH
	rb	0f25ch.0

;;	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 0317H 0002H 003CH
	rb	0f25dh.1

;;	PB1MD0  = 0;	
CLINEA 0000H 0001H 0318H 0002H 000EH
	rb	0f25ch.1

;;	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 0319H 0002H 003CH
	rb	0f25dh.2

;;	PB2MD0  = 0;	
CLINEA 0000H 0001H 031AH 0002H 000EH
	rb	0f25ch.2

;;	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 031BH 0002H 003CH
	rb	0f25dh.3

;;	PB3MD0  = 0;	
CLINEA 0000H 0001H 031CH 0002H 000EH
	rb	0f25ch.3

;;	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
CLINEA 0000H 0001H 031DH 0002H 003CH
	rb	0f25dh.4

;;	PB4MD0  = 0;	
CLINEA 0000H 0001H 031EH 0002H 000EH
	rb	0f25ch.4

;;	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
CLINEA 0000H 0001H 031FH 0002H 003CH
	rb	0f25dh.5

;;	PB5MD0  = 0;
CLINEA 0000H 0001H 0320H 0002H 000DH
	rb	0f25ch.5

;;	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
CLINEA 0000H 0001H 0321H 0002H 003CH
	rb	0f25dh.6

;;	PB6MD0  = 0;	
CLINEA 0000H 0001H 0322H 0002H 000EH
	rb	0f25ch.6

;;	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
CLINEA 0000H 0001H 0323H 0002H 003CH
	rb	0f25dh.7

;;	PB7MD0  = 0;
CLINEA 0000H 0001H 0324H 0002H 000DH
	rb	0f25ch.7

;;	PB0D = 0;		// B.0 Output OFF....
CLINEA 0000H 0001H 0327H 0002H 0021H
	rb	0f258h.0

;;	PB1D = 0;		// B.1 Output OFF....
CLINEA 0000H 0001H 0328H 0002H 0021H
	rb	0f258h.1

;;	PB2D = 0;		// B.2 Output OFF....
CLINEA 0000H 0001H 0329H 0002H 0021H
	rb	0f258h.2

;;	PB3D = 0;		// B.3 Output OFF....
CLINEA 0000H 0001H 032AH 0002H 0021H
	rb	0f258h.3

;;	PB4D = 0;		// B.4 Output OFF....
CLINEA 0000H 0001H 032BH 0002H 0021H
	rb	0f258h.4

;;	PB5D = 0;		// B.5 Output OFF....
CLINEA 0000H 0001H 032CH 0002H 0021H
	rb	0f258h.5

;;	PB6D = 0;		// B.6 Output OFF....
CLINEA 0000H 0001H 032DH 0002H 0021H
	rb	0f258h.6

;;	PB7D = 0;		// B.7 Output OFF....
CLINEA 0000H 0001H 032EH 0002H 0021H
	rb	0f258h.7

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0330H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 72 2 818
CLINEA 0000H 0001H 0332H 0001H 0001H
CBLOCKEND 72 1 818
CFUNCTIONEND 72


	rseg $$PortC_Low$main
CFUNCTION 73

_PortC_Low	:
CBLOCK 73 1 824

;;void PortC_Low(void){
CLINEA 0000H 0001H 0338H 0001H 0015H
CBLOCK 73 2 824

;;	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
CLINEA 0000H 0001H 0342H 0002H 0031H
	rb	0f261h.0

;;	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
CLINEA 0000H 0001H 0343H 0002H 0031H
	rb	0f261h.1

;;	PC2DIR = 0;		// PortC Bit2 set to Output Mode...
CLINEA 0000H 0001H 0344H 0002H 0031H
	rb	0f261h.2

;;	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
CLINEA 0000H 0001H 0345H 0002H 0031H
	rb	0f261h.3

;;	PC0C1  = 1;		// PortC Bit0 set to High-Impedance Output...
CLINEA 0000H 0001H 0349H 0002H 003BH
	sb	0f263h.0

;;	PC0C0  = 1;		
CLINEA 0000H 0001H 034AH 0002H 000EH
	sb	0f262h.0

;;	PC1C1  = 1;		// PortC Bit1 set to High-Impedance Output...
CLINEA 0000H 0001H 034BH 0002H 003BH
	sb	0f263h.1

;;	PC1C0  = 1;	
CLINEA 0000H 0001H 034CH 0002H 000DH
	sb	0f262h.1

;;	PC2C1  = 1;		// PortC Bit2 set to High-Impedance Output...
CLINEA 0000H 0001H 034DH 0002H 003BH
	sb	0f263h.2

;;	PC2C0  = 1;	
CLINEA 0000H 0001H 034EH 0002H 000DH
	sb	0f262h.2

;;	PC3C1  = 1;		// PortC Bit3 set to High-Impedance Output...
CLINEA 0000H 0001H 034FH 0002H 003BH
	sb	0f263h.3

;;	PC3C0  = 1;		
CLINEA 0000H 0001H 0350H 0002H 000EH
	sb	0f262h.3

;;	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 0353H 0002H 003CH
	rb	0f265h.0

;;	PC0MD0  = 0;	
CLINEA 0000H 0001H 0354H 0002H 000EH
	rb	0f264h.0

;;	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 0355H 0002H 003CH
	rb	0f265h.1

;;	PC1MD0  = 0;	
CLINEA 0000H 0001H 0356H 0002H 000EH
	rb	0f264h.1

;;	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 0357H 0002H 003CH
	rb	0f265h.2

;;	PC2MD0  = 0;	
CLINEA 0000H 0001H 0358H 0002H 000EH
	rb	0f264h.2

;;	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 0359H 0002H 003CH
	rb	0f265h.3

;;	PC3MD0  = 0;	
CLINEA 0000H 0001H 035AH 0002H 000EH
	rb	0f264h.3

;;	PC0D = 0;		// C.0 Output OFF....
CLINEA 0000H 0001H 035DH 0002H 0021H
	rb	0f260h.0

;;	PC1D = 0;		// C.1 Output OFF....
CLINEA 0000H 0001H 035EH 0002H 0021H
	rb	0f260h.1

;;	PC2D = 0;		// C.2 Output OFF....
CLINEA 0000H 0001H 035FH 0002H 0021H
	rb	0f260h.2

;;	PC3D = 0;		// C.3 Output OFF....
CLINEA 0000H 0001H 0360H 0002H 0021H
	rb	0f260h.3

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0362H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 73 2 868
CLINEA 0000H 0001H 0364H 0001H 0001H
CBLOCKEND 73 1 868
CFUNCTIONEND 73


	rseg $$PortA_Digital_Inputs$main
CFUNCTION 75

_PortA_Digital_Inputs	:
CBLOCK 75 1 874

;;void PortA_Digital_Inputs(void){
CLINEA 0000H 0001H 036AH 0001H 0020H
CBLOCK 75 2 874

;;	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
CLINEA 0000H 0001H 0374H 0002H 0030H
	sb	0f251h.0

;;	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
CLINEA 0000H 0001H 0375H 0002H 0030H
	sb	0f251h.1

;;	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
CLINEA 0000H 0001H 0376H 0002H 0030H
	sb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 037AH 0002H 0041H
	sb	0f253h.0

;;	PA0C0  = 0;		
CLINEA 0000H 0001H 037BH 0002H 000EH
	rb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 037CH 0002H 0041H
	sb	0f253h.1

;;	PA1C0  = 0;	
CLINEA 0000H 0001H 037DH 0002H 000DH
	rb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 037EH 0002H 0041H
	sb	0f253h.2

;;	PA2C0  = 0;	
CLINEA 0000H 0001H 037FH 0002H 000DH
	rb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
CLINEA 0000H 0001H 0382H 0002H 0039H
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 0383H 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
CLINEA 0000H 0001H 0384H 0002H 0039H
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 0385H 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
CLINEA 0000H 0001H 0386H 0002H 0039H
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 0387H 0002H 000EH
	rb	0f254h.2

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0389H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 75 2 907
CLINEA 0000H 0001H 038BH 0001H 0001H
CBLOCKEND 75 1 907
CFUNCTIONEND 75


	rseg $$PinB0_PWM$main
CFUNCTION 76

_PinB0_PWM	:
CBLOCK 76 1 915

;;void PinB0_PWM(void){
CLINEA 0000H 0001H 0393H 0001H 0015H
CBLOCK 76 2 915

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 03A2H 0002H 0031H
	rb	0f259h.0

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 03A5H 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 03A6H 0002H 000EH
	sb	0f25ah.0

;;	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
CLINEA 0000H 0001H 03A9H 0002H 0036H
	rb	0f25dh.0

;;	PB0MD0  = 1;	
CLINEA 0000H 0001H 03AAH 0002H 000EH
	sb	0f25ch.0

;;	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
CLINEA 0000H 0001H 03AEH 0002H 0023H
	rb	0f916h.1

;;	PCCS0 = 1;
CLINEA 0000H 0001H 03AFH 0002H 000BH
	sb	0f916h.0

;;	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
CLINEA 0000H 0001H 03B2H 0002H 007EH
	mov	r0,	#09ah
	mov	r1,	#010h
	st	er0,	0f910h

;;	PWCD =    12;		//12    ~  0.25 % duty cycle @ 160Hz
CLINEA 0000H 0001H 03BCH 0002H 0034H
	mov	er0,	#12
	st	er0,	0f912h

;;	PCRUN = 0;		// OFF to start
CLINEA 0000H 0001H 03BEH 0002H 001CH
	rb	0f917h.0
CBLOCKEND 76 2 960

;;}
CLINEA 0000H 0001H 03C0H 0001H 0001H
	rt
CBLOCKEND 76 1 960
CFUNCTIONEND 76


	rseg $$TX_Loop$main
CFUNCTION 83

_TX_Loop	:
CBLOCK 83 1 968

;;void TX_Loop(void){
CLINEA 0000H 0001H 03C8H 0001H 0013H
	push	lr
CBLOCK 83 2 968
CRET 0000H

;;		uart_PortSet();
CLINEA 0000H 0001H 03CAH 0003H 0011H
	bl	_uart_PortSet

;;		_flgUartFin = 0;
CLINEA 0000H 0001H 03CBH 0003H 0012H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;		uart_stop();
CLINEA 0000H 0001H 03CCH 0003H 000EH
	bl	_uart_stop

;;		uart_startSend(PING, 8, _funcUartFin); // Send, "PING!"
CLINEA 0000H 0001H 03CEH 0003H 0039H
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#8 
	mov	r0,	#BYTE1 OFFSET _PING
	mov	r1,	#BYTE2 OFFSET _PING
	bl	_uart_startSend
	add	sp,	#2 

;;		while(_flgUartFin != 1){
CLINEA 0000H 0000H 03CFH 0001H 001AH
	bal	_$L96

;;		while(_flgUartFin != 1){
CLINEA 0000H 0000H 03CFH 0003H 001AH
_$L94 :
CBLOCK 83 3 975

;;			NOP1000();
CLINEA 0000H 0001H 03D0H 0004H 000DH
	bl	_NOP1000

;;			main_clrWDT();
CLINEA 0000H 0001H 03D1H 0004H 0011H
	bl	_main_clrWDT
CBLOCKEND 83 3 978

;;		while(_flgUartFin != 1){
CLINEA 0000H 0000H 03CFH 0001H 001AH
_$L96 :
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L94
CBLOCKEND 83 2 980

;;}//End TX_Loop Function...
CLINEA 0000H 0001H 03D4H 0001H 001AH
	pop	pc
CBLOCKEND 83 1 980
CFUNCTIONEND 83


	rseg $$Control_LEDs$main
CFUNCTION 77

_Control_LEDs	:
CBLOCK 77 1 986

;;void Control_LEDs(void){
CLINEA 0000H 0001H 03DAH 0001H 0018H
CBLOCK 77 2 986
CLOCAL 47H 0002H 0024H 0002H "x" 02H 00H 01H
CLOCAL 4BH 0002H 0000H 0002H "y" 02H 00H 01H
CLOCAL 4BH 0002H 0000H 0002H "led_flag" 02H 00H 01H
CLOCAL 4BH 0002H 0000H 0002H "LED_Code" 02H 00H 01H

;;	PB5D = 1;
CLINEA 0000H 0001H 03E5H 0002H 000AH
	sb	0f258h.5

;;	PB6D = 0;	// Set LATCH LOW...
CLINEA 0000H 0001H 03E8H 0002H 001EH
	rb	0f258h.6

;;	for (x=0; x<13; x++)
CLINEA 0000H 0001H 03EAH 0002H 0015H
	mov	er0,	#0 
_$L100 :
CBLOCK 77 3 1003

;;		PB7D = 0;		//Set CLK Low to Start...
CLINEA 0000H 0001H 03ECH 0003H 0026H
	rb	0f258h.7

;;		PB7D = 1;		//Cycle Clk HIGH...
CLINEA 0000H 0001H 03F0H 0003H 0020H
	sb	0f258h.7

;;		PB5D = 1;	//Set Data 1 or 0 (ON/OFF)...	
CLINEA 0000H 0001H 03F5H 0003H 002AH
	sb	0f258h.5
CBLOCKEND 77 3 1017

;;	for (x=0; x<13; x++)
CLINEA 0000H 0000H 03EAH 0002H 0015H
	add	er0,	#1 
	cmp	r0,	#0dh
	cmpc	r1,	#00h
	blts	_$L100

;;	PB6D = 1;	// Set LATCH High to end transmission...
CLINEA 0000H 0001H 03FDH 0002H 0033H
	sb	0f258h.6
CBLOCKEND 77 2 1026

;;}
CLINEA 0000H 0001H 0402H 0001H 0001H
	rt
CBLOCKEND 77 1 1026
CFUNCTIONEND 77

	public _main_clrWDT
	public _main_reqNotHalt
	public _PING
	public _AckMCUConn
	public _InputRec
	public _TX_Loop
	public _PortA_Digital_Inputs
	public _main
	public _NOP1000
	public _OutputRec
	public _PortC_Low
	public _HelloWorld
	public _PortB_Low
	public _InputStatus
	public _PortA_Low
	public _analog_comparator
	public _PinB0_PWM
	public _Control_LEDs
	_RecWorld comm data 015h #00h
	__flgUartFin comm data 01h #00h
	_UART_VAR comm data 02h #00h
	_long_a comm data 04h #00h
	_double_a comm data 08h #00h
	_inta comm data 02h #00h
	_table comm data 0c8h #00h
	_char_a comm data 01h #00h
	_delay comm data 04h #00h
	_uint comm data 02h #00h
	__reqNotHalt comm data 01h #00h
	_uchar comm data 01h #00h
	_Q111ToQ112 comm data 016h #00h
	_float_a comm data 04h #00h
	extrn code near : _irq_init
	extrn code near : _uart_PortSet
	extrn code near : _uart_init
	extrn code near : _irq_di
	extrn code near : _irq_ei
	extrn code near : _irq_setHdr
	extrn code near : _uart_stop
	extrn code near : _uart_startSend
	extrn code near : _uart_continue
	extrn code : $$start_up

	cseg #00h at 02h
	dw	$$start_up

	rseg $$NINITTAB
	DB	"Hello World!  "
	DB	"PING!   "
	DB	"INP_00000000_00000000", 00H
	db	00h
	DB	"INP Received", 00H
	db	00h
	DB	"OUT Received         ", 00H
	db	00h
	DB	"ML610Q111 Connected!", 00H
	db	00h

	rseg $$TAB_uartSetParam$main
__uartSetParam :
	dw	02580h
	dw	00h
	db	00h
	db	02h
	db	00h
	db	00h
	db	00h
	align

	rseg $$NINITVAR
_HelloWorld :
	ds	0eh
_PING :
	ds	08h
_InputStatus :
	ds	017h
_InputRec :
	ds	0eh
_OutputRec :
	ds	017h
_AckMCUConn :
	ds	016h

	end
